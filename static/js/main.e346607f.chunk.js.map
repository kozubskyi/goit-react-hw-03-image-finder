{"version":3,"sources":["services/pixabay-api.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["query","queryPage","perPage","apiKey","axios","get","then","response","data","hits","Searchbar","state","searchQuery","changeInputValue","event","setState","target","value","onSubmit","preventDefault","props","onSearchFormSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","defaultProps","ImageGallery","children","ImageGalleryItem","images","onImageClick","map","image","src","webformatURL","alt","tags","onClick","id","LoaderComponent","color","height","width","Button","fetchImages","Modal","onEscKeydown","code","toggleModal","onOverlayClick","currentTarget","window","addEventListener","removeEventListener","largeImage","imageAlt","App","isLoading","isModalOpen","pixabayApi","backendImages","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","console","log","finally","clickedImage","find","largeImageURL","prevProps","Fragment","length","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e346607f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchImages = ({ query, queryPage = 1, perPage = 12, apiKey = '20023331-464bd2371129c2e39a7fc1f52' }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&page=${queryPage}&per_page=${perPage}&key=${apiKey}&image_type=photo&orientation=horizontal`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  changeInputValue = event => this.setState({ searchQuery: event.target.value });\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSearchFormSubmit(this.state.searchQuery);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.onSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"search\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.changeInputValue}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.defaultProps = {\r\n  searchQuery: '',\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n  onSearchFormSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {/* <ImageGalleryItem images={images} /> */}\r\n      {children}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ images, onImageClick }) => {\r\n  return images.map(image => (\r\n    <li className=\"ImageGalleryItem\" key={image.id}>\r\n      <img\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onImageClick(image.id)}\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nImageGalleryItem.defaultProps = {\r\n  images: [],\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst LoaderComponent = () => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={50}\r\n        width={50}\r\n        // timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderComponent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ fetchImages }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={fetchImages}>\r\n      Загрузить еще\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  fetchImages: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.onEscKeydown);\r\n  }\r\n\r\n  onEscKeydown = event => event.code === 'Escape' && this.props.toggleModal();\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.onEscKeydown);\r\n  }\r\n\r\n  onOverlayClick = event => event.target === event.currentTarget && this.props.toggleModal();\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.onOverlayClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImage} alt={this.props.imageAlt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  imageAlt: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport pixabayApi from './services/pixabay-api';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\nimport LoaderComponent from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    images: [],\n    query: '',\n    queryPage: 1,\n    isLoading: false,\n    isModalOpen: false,\n    largeImage: '',\n    imageAlt: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    prevState.query !== this.state.query && this.fetchImages();\n  }\n\n  onSearchFormSubmit = searchQuery => {\n    searchQuery !== '' && this.setState({ query: searchQuery, queryPage: 1, images: [] });\n  };\n\n  fetchImages = () => {\n    this.setState({ isLoading: true });\n\n    pixabayApi\n      .fetchImages({ query: this.state.query, queryPage: this.state.queryPage })\n      .then(backendImages => {\n        // console.log(backendImages);\n        this.setState(prevState => ({\n          images: [...prevState.images, ...backendImages],\n          queryPage: prevState.queryPage + 1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  onImageClick = id => {\n    const clickedImage = this.state.images.find(image => image.id === id);\n\n    clickedImage &&\n      this.setState({\n        largeImage: clickedImage.largeImageURL,\n        imageAlt: clickedImage.tags,\n        isModalOpen: true,\n      });\n  };\n\n  toggleModal = () => this.setState(prevState => ({ isModalOpen: !prevState.isModalOpen }));\n\n  render() {\n    const { images, isLoading, isModalOpen, largeImage, imageAlt } = this.state;\n\n    return (\n      <React.Fragment>\n        <Searchbar onSearchFormSubmit={this.onSearchFormSubmit} />\n        <ImageGallery>\n          <ImageGalleryItem images={images} onImageClick={this.onImageClick} />\n        </ImageGallery>\n        {images.length > 0 && !isLoading && <Button fetchImages={this.fetchImages} />}\n        {isLoading && <LoaderComponent />}\n        {isModalOpen && <Modal largeImage={largeImage} imageAlt={imageAlt} toggleModal={this.toggleModal} />}\n      </React.Fragment>\n    );\n  }\n}\n\nApp.defaultProps = {\n  images: [],\n  query: '',\n  queryPage: 1,\n  isLoading: false,\n  isModalOpen: false,\n  largeImage: '',\n  imageAlt: '',\n};\n\nApp.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  query: PropTypes.string,\n  queryPage: PropTypes.number,\n  isLoading: PropTypes.bool,\n  isModalOpen: PropTypes.bool,\n  largeImage: PropTypes.string,\n  imageAlt: PropTypes.string,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}